# Define UI (HTML webpage) that draws a histogram
  # fluidPage auto adjusts to browser dimensions
  
  # Define server logic required to draw a histogram
  # contains functions for server (computer) to build the app
  # I think server gets run every time
  # Guess: plotOutput("distPlot") in ui.R calls output$distPlot, which uses
    # the number of bins selected as "input"
    
- follow these instructions: https://shiny.rstudio.com/articles/basics.html 
  - this is following example 3
- for this example, faithful seems to already be built-in dataseet
  
- Server notes:

    
- main advantage of Shiny web framework
  - easy for user input values to go into R server, 
  then results of R code written as output values back to web page
# Rendering expresssions: create summary and view values
  # only executed when dependencies change (input$dataset or input$obs)
# Reactive expression: returns dataset corresponding to user choice
  - changing input values causes parts of R code to re-execute
- Reactive values: values which change in response to user, or over-time
  - most commonly created using "input" object
    - input object is passed to shinyServer function, which accesses web page's user input fields
      - looks like grabbing value from list/DF, but actually reading a reactive value
  - assigning reactive values to "output" object allows us to view them on the web page
    - output$view will be reactivated anytime the reactive value, input$obs,
    or the reactive expression, datasetInput(), are changed